{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _classCallCheck from \"/Users/liamarbuckle/Documents/flask1/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/liamarbuckle/Documents/flask1/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/liamarbuckle/Documents/flask1/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/liamarbuckle/Documents/flask1/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/liamarbuckle/Documents/flask1/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/liamarbuckle/Documents/flask1/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"/Users/liamarbuckle/Documents/flask1/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/liamarbuckle/Documents/flask1/components/ReactUtterances.tsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport styles from './styles.module.css';\nexport var ReactUtterances = /*#__PURE__*/function (_React$Component) {\n  _inherits(ReactUtterances, _React$Component);\n\n  var _super = _createSuper(ReactUtterances);\n\n  function ReactUtterances(props) {\n    var _this;\n\n    _classCallCheck(this, ReactUtterances);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"reference\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"scriptElement\", void 0);\n\n    if (props.issueMap === 'issue-term' && props.issueTerm === undefined) {\n      throw Error(\"Property 'issueTerm' must be provided with issueMap 'issue-term'\");\n    }\n\n    if (props.issueMap === 'issue-number' && props.issueNumber === undefined) {\n      throw Error(\"Property 'issueNumber' must be provided with issueMap 'issue-number'\");\n    }\n\n    _this.reference = /*#__PURE__*/React.createRef();\n    _this.state = {\n      pending: true\n    };\n    return _this;\n  }\n\n  _createClass(ReactUtterances, [{\n    key: \"UNSAFE_componentWillReceiveProps\",\n    value: function UNSAFE_componentWillReceiveProps(props) {\n      // this.scriptElement.setAttribute('theme', props.theme)\n      var iframe = document.querySelector('iframe.utterances-frame');\n\n      if (iframe) {\n        iframe.contentWindow.postMessage({\n          type: 'set-theme',\n          theme: props.theme\n        }, 'https://utteranc.es/');\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          repo = _this$props.repo,\n          issueMap = _this$props.issueMap,\n          issueTerm = _this$props.issueTerm,\n          issueNumber = _this$props.issueNumber,\n          label = _this$props.label,\n          theme = _this$props.theme;\n      var scriptElement = document.createElement('script');\n      scriptElement.src = 'https://utteranc.es/client.js';\n      scriptElement.async = true;\n      scriptElement.defer = true;\n      scriptElement.setAttribute('repo', repo);\n      scriptElement.setAttribute('crossorigin', 'annonymous');\n      scriptElement.setAttribute('theme', theme);\n\n      scriptElement.onload = function () {\n        return _this2.setState({\n          pending: false\n        });\n      };\n\n      if (label) {\n        scriptElement.setAttribute('label', label);\n      }\n\n      if (issueMap === 'issue-number') {\n        scriptElement.setAttribute('issue-number', issueNumber.toString());\n      } else if (issueMap === 'issue-term') {\n        scriptElement.setAttribute('issue-term', issueTerm);\n      } else {\n        scriptElement.setAttribute('issue-term', issueMap);\n      } // TODO: Check current availability\n\n\n      this.scriptElement = scriptElement;\n      this.reference.current.appendChild(scriptElement);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.comments,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.utterances,\n          ref: this.reference,\n          children: this.state.pending && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Loading Comments...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 34\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n\n  return ReactUtterances;\n}(React.Component);","map":{"version":3,"sources":["/Users/liamarbuckle/Documents/flask1/components/ReactUtterances.tsx"],"names":["React","styles","ReactUtterances","props","issueMap","issueTerm","undefined","Error","issueNumber","reference","createRef","state","pending","iframe","document","querySelector","contentWindow","postMessage","type","theme","repo","label","scriptElement","createElement","src","async","defer","setAttribute","onload","setState","toString","current","appendChild","comments","utterances","Component"],"mappings":"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","sourcesContent":["import React from 'react'\n\nimport styles from './styles.module.css'\n\nexport type MappingType =\n  | 'pathname'\n  | 'url'\n  | 'title'\n  | 'og:title'\n  | 'issue-number'\n  | 'issue-term'\n\nexport type Theme =\n  | 'github-light'\n  | 'github-dark'\n  | 'preferred-color-scheme'\n  | 'github-dark-orange'\n  | 'icy-dark'\n  | 'dark-blue'\n  | 'photon-dark'\n\ninterface ReactUtterancesProps {\n  repo: string\n  issueMap: MappingType\n  issueTerm?: string\n  issueNumber?: number\n  label?: string\n  theme: Theme\n}\n\ninterface ReactUtterancesState {\n  pending: boolean\n}\n\nexport class ReactUtterances extends React.Component<\n  ReactUtterancesProps,\n  ReactUtterancesState\n> {\n  reference: React.RefObject<HTMLDivElement>\n  scriptElement: any\n\n  constructor(props: ReactUtterancesProps) {\n    super(props)\n\n    if (props.issueMap === 'issue-term' && props.issueTerm === undefined) {\n      throw Error(\n        \"Property 'issueTerm' must be provided with issueMap 'issue-term'\"\n      )\n    }\n\n    if (props.issueMap === 'issue-number' && props.issueNumber === undefined) {\n      throw Error(\n        \"Property 'issueNumber' must be provided with issueMap 'issue-number'\"\n      )\n    }\n\n    this.reference = React.createRef<HTMLDivElement>()\n    this.state = { pending: true }\n  }\n\n  UNSAFE_componentWillReceiveProps(props) {\n    // this.scriptElement.setAttribute('theme', props.theme)\n    const iframe = document.querySelector('iframe.utterances-frame') as any\n\n    if (iframe) {\n      iframe.contentWindow.postMessage(\n        { type: 'set-theme', theme: props.theme },\n        'https://utteranc.es/'\n      )\n    }\n  }\n\n  componentDidMount(): void {\n    const { repo, issueMap, issueTerm, issueNumber, label, theme } = this.props\n    const scriptElement = document.createElement('script')\n    scriptElement.src = 'https://utteranc.es/client.js'\n    scriptElement.async = true\n    scriptElement.defer = true\n    scriptElement.setAttribute('repo', repo)\n    scriptElement.setAttribute('crossorigin', 'annonymous')\n    scriptElement.setAttribute('theme', theme)\n    scriptElement.onload = () => this.setState({ pending: false })\n\n    if (label) {\n      scriptElement.setAttribute('label', label)\n    }\n\n    if (issueMap === 'issue-number') {\n      scriptElement.setAttribute('issue-number', issueNumber.toString())\n    } else if (issueMap === 'issue-term') {\n      scriptElement.setAttribute('issue-term', issueTerm)\n    } else {\n      scriptElement.setAttribute('issue-term', issueMap)\n    }\n\n    // TODO: Check current availability\n    this.scriptElement = scriptElement\n    this.reference.current.appendChild(scriptElement)\n  }\n\n  render(): React.ReactElement {\n    return (\n      <div className={styles.comments}>\n        <div className={styles.utterances} ref={this.reference}>\n          {this.state.pending && <p>Loading Comments...</p>}\n        </div>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}