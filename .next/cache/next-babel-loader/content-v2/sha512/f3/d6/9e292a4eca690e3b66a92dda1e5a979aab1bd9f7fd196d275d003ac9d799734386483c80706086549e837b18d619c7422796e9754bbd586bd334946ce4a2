{"ast":null,"code":"import { parsePageId, getCanonicalPageId as getCanonicalPageIdImpl } from 'notion-utils';\nimport { inversePageUrlOverrides } from './config';\nexport function getCanonicalPageId(pageId, recordMap) {\n  var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n      _ref$uuid = _ref.uuid,\n      uuid = _ref$uuid === void 0 ? true : _ref$uuid;\n\n  var cleanPageId = parsePageId(pageId, {\n    uuid: false\n  });\n\n  if (!cleanPageId) {\n    return null;\n  }\n\n  var override = inversePageUrlOverrides[cleanPageId];\n\n  if (override) {\n    return override;\n  } else {\n    return getCanonicalPageIdImpl(pageId, recordMap, {\n      uuid: uuid\n    });\n  }\n}","map":{"version":3,"sources":["/Users/liamarbuckle/Documents/flask1/lib/get-canonical-page-id.ts"],"names":["parsePageId","getCanonicalPageId","getCanonicalPageIdImpl","inversePageUrlOverrides","pageId","recordMap","uuid","cleanPageId","override"],"mappings":"AACA,SACEA,WADF,EAEEC,kBAAkB,IAAIC,sBAFxB,QAGO,cAHP;AAKA,SAASC,uBAAT,QAAwC,UAAxC;AAEA,OAAO,SAASF,kBAAT,CACLG,MADK,EAELC,SAFK,EAIU;AAAA,iFADuB,EACvB;AAAA,uBADbC,IACa;AAAA,MADbA,IACa,0BADN,IACM;;AACf,MAAMC,WAAW,GAAGP,WAAW,CAACI,MAAD,EAAS;AAAEE,IAAAA,IAAI,EAAE;AAAR,GAAT,CAA/B;;AACA,MAAI,CAACC,WAAL,EAAkB;AAChB,WAAO,IAAP;AACD;;AAED,MAAMC,QAAQ,GAAGL,uBAAuB,CAACI,WAAD,CAAxC;;AACA,MAAIC,QAAJ,EAAc;AACZ,WAAOA,QAAP;AACD,GAFD,MAEO;AACL,WAAON,sBAAsB,CAACE,MAAD,EAASC,SAAT,EAAoB;AAC/CC,MAAAA,IAAI,EAAJA;AAD+C,KAApB,CAA7B;AAGD;AACF","sourcesContent":["import { ExtendedRecordMap } from 'notion-types'\nimport {\n  parsePageId,\n  getCanonicalPageId as getCanonicalPageIdImpl\n} from 'notion-utils'\n\nimport { inversePageUrlOverrides } from './config'\n\nexport function getCanonicalPageId(\n  pageId: string,\n  recordMap: ExtendedRecordMap,\n  { uuid = true }: { uuid?: boolean } = {}\n): string | null {\n  const cleanPageId = parsePageId(pageId, { uuid: false })\n  if (!cleanPageId) {\n    return null\n  }\n\n  const override = inversePageUrlOverrides[cleanPageId]\n  if (override) {\n    return override\n  } else {\n    return getCanonicalPageIdImpl(pageId, recordMap, {\n      uuid\n    })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}